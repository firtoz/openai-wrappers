name: Run Tests If Admin

# run on push to main or production, or on PR open, or manually
on:
  push:
    branches: [ "main", "production" ]
  pull_request_target:
    branches: [ "main" ]
  workflow_dispatch:
    inputs:
      # This is the name of the input
      # The description is optional
      # The default value is optional
      # The required is optional, and defaults to false
      pr-number:
        description: 'The PR number to approve'
        required: true
        default: '0'
env:
  HEAD_OWNER: ${{ github.event.pull_request.head.repo.owner.login }}

# allow pr comment adding
permissions:
  pull-requests: write
  contents: write

jobs:
  check-admin:
    runs-on: ubuntu-latest
    outputs:
      isAdmin: ${{ steps.checkUser.outputs.require-result }}
    steps:
      - uses: actions-cool/check-user-permission@main
        id: checkUser
        with:
          require: 'admin'

  request-approval:
    needs: check-admin
    # run only if not an admin, and only on the PR open event
    if: needs.check-admin.outputs.isAdmin == 'false' && github.event_name == 'pull_request_target' && github.event.action == 'opened'
    runs-on: ubuntu-latest
    steps:
      - name: Add PR comment for manual approval
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          # in the body, ping the repo owner to run the manual approval workflow
          script: |
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: "This PR requires manual approval by a maintainer. @${{ env.HEAD_OWNER }}, please run the manual approval workflow.",
            });

  build:
    needs: check-admin
    if: needs.check-admin.outputs.isAdmin == 'true' || github.event_name == 'push'
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [ 16.x, 18.x ]

    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - run: yarn
      - name: Run tests
        run: yarn test
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
      - run: yarn build

  # run the manual approval workflow
  approve:
    # needs check admin and build
    needs: [ check-admin, build ]
    # run only if an admin, and only on the workflow_dispatch event, if build succeeded
    if: needs.check-admin.outputs.isAdmin == 'true' && github.event_name == 'workflow_dispatch' && needs.build.result == 'success'
    runs-on: ubuntu-latest
    steps:
      - name: Approve PR
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            await github.rest.pulls.createReview({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: ${{ github.event.inputs.pr-number }},
              event: 'APPROVE',
            });
